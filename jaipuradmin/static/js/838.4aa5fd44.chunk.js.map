{"version":3,"file":"static/js/838.4aa5fd44.chunk.js","mappings":"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","sources":["app/components/userManagement/Adduser.js"],"sourcesContent":["import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\n\nexport default function Adduser() {\n\n    const history = useHistory()\n\n    const [Name, setName] = useState()\n    const [Phone, setPhone] = useState()\n    const [Email, setEmail] = useState()\n    const [Password, setPassword] = useState()\n    const [cPassword, setCPassword] = useState()\n    const beckendLocalApiUrl = process.env.REACT_APP_BACKEND_LOCAL_API;\n  const beckendLiveApiUrl = process.env.REACT_APP_BACKEND_LIVE_API;\n  const nodeMode = process.env.NODE_ENV;\n  if (nodeMode === \"development\") {\n    var baseUrl = beckendLocalApiUrl;\n  } else {\n    baseUrl = beckendLiveApiUrl;\n  }\n\n\n    const addUser1 = async (e) => {\n        e.preventDefault()\n        if (Password == cPassword) {\n            axios.post(baseUrl+`register`, {\n                Name,\n                Phone,\n                Email,\n                Password,\n                cPassword,\n\n            }).then((res) => {\n                history.push(\"/user/allusers\")\n            })\n        } else {\n            alert(\"Some thing wrong\")\n        }\n\n    }\n\n\n    const location = useLocation();\n    const path = location.pathname.split(\"/\")[3];\n\n    // const [user, setProduct] = useState()\n\n\n    const getPost = async () => {\n        // alert(Name)\n        const access_token = localStorage.getItem(\"token\")\n        const headers = {\n            Authorization: `Bearer ${access_token}`\n        }\n        const data = await axios.patch(baseUrl+`admin/edit/user/${path}`, {\n            Name,\n            Phone,\n            Email,\n        }, { headers })\n            .then((res) => {\n                // console.log(res.data)\n                setName(res.data.Name)\n                setEmail(res.data.Email)\n                setPhone(res.data.Phone)\n\n\n\n            })\n        // .catch((e) => alert(e))\n\n\n    }\n\n    useEffect(() => {\n        getPost()\n    }, [path])\n\n\n\n\n    if (path == undefined) {\n        return (\n            <div>\n                <h4 className='font-weight-bold my-3'>ADD NEW USER</h4>\n                <form id=\"add_user_form\" action=\"\" style={{backgroundColor:\"rgba(0, 27, 11, 0.734)\"}}>\n                    <div className=\"form-row\">\n                        <div className=\"form-group col-md-4\">\n                            <label htmlFor=\"name\">Name</label>\n                            <input type=\"text\" className=\"form-control\" id=\"name\" name=\"name\" placeholder=\"Name\" onChange={(e) => setName(e.target.value)} />\n                        </div>\n                        <div className=\"form-group col-md-4\">\n                            <label htmlFor=\"mobile\">Mobile</label>\n                            <input type=\"text\" className=\"form-control form-control\" maxLength={10} id=\"mobile\" name=\"mobile\" placeholder=\"MObile\" onChange={(e) => setPhone(e.target.value)} />\n                        </div>\n                        <div className=\"form-group col-md-4\">\n                            <label htmlFor=\"email\">Email</label>\n                            <input type=\"email\" className=\"form-control\" id=\"email\" name=\"email\" placeholder=\"Email\" onChange={(e) => setEmail(e.target.value)} />\n                        </div>\n                    </div>\n                    <div className=\"form-row\">\n                        <div className=\"form-group col-md-6\">\n                            <label htmlFor=\"passowrd\">Password</label>\n                            <input type=\"password\" className=\"form-control\" id=\"password\" name=\"password\" placeholder=\"Passowrd\" onChange={(e) => setPassword(e.target.value)} />\n                        </div>\n                        <div className=\"form-group col-md-6\">\n                            <label htmlFor=\"mobile\">Confirm Password</label>\n                            <input type=\"password\" className=\"form-control\" id=\"confirm_password\" name=\"confirm_password\" placeholder=\"Confirm Passowrd\" onChange={(e) => setCPassword(e.target.value)} />\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <div className=\"form-check\">\n                            <input className=\"form-check-input\" type=\"checkbox\" id=\"verificationrequired\" name=\"verificationrequired\" defaultChecked />\n                            <label className=\"form-check-label\" htmlFor=\"verificationrequired\">\n                                OTP Verification required during first time login.\n                            </label>\n                        </div>\n                    </div>\n                    <button className=\"btn btn-success float-right\" onClick={(e) => addUser1(e)} > Add User</button>\n                </form>\n\n            </div >\n        )\n    }\n    else {\n        return (\n            <div>\n\n                <h4 className='font-weight-bold my-3'>Update User</h4>\n                <div id=\"add_user_form\" >\n                    <div className=\"form-row\">\n                        <div className=\"form-group col-md-4\">\n                            <label htmlFor=\"name\">Name</label>\n                            <input type=\"text\" className=\"form-control\" id=\"name\" name=\"name\" placeholder=\"Name\" onChange={(e) => setName(e.target.value)} value={Name} />\n                        </div>\n                        <div className=\"form-group col-md-4\">\n                            <label htmlFor=\"mobile\">Mobile</label>\n                            <input type=\"text\" className=\"form-control form-control\" maxLength={10} id=\"mobile\" name=\"mobile\" placeholder=\"MObile\" onChange={(e) => setPhone(e.target.value)} value={Phone} />\n                        </div>\n                        <div className=\"form-group col-md-4\">\n                            <label htmlFor=\"email\">Email</label>\n                            <input type=\"email\" className=\"form-control\" id=\"email\" name=\"email\" placeholder=\"Email\" onChange={(e) => setEmail(e.target.value)} value={Email} />\n                        </div>\n                    </div>\n                    {/* <div className=\"form-row\">\n                        <div className=\"form-group col-md-6\">\n                            <label htmlFor=\"passowrd\">Password</label>\n                            <input type=\"password\" className=\"form-control\" id=\"password\" name=\"password\" placeholder=\"Passowrd\" />\n                        </div>\n                        <div className=\"form-group col-md-6\">\n                            <label htmlFor=\"mobile\">Confirm Password</label>\n                            <input type=\"password\" className=\"form-control\" id=\"confirm_password\" name=\"confirm_password\" placeholder=\"Confirm Passowrd\" />\n                        </div>\n                    </div> */}\n\n                    <button className=\"btn btn-success float-right\" onClick={(e) => getPost(e)} > Update User</button>\n                </div>\n\n            </div >\n        )\n    }\n\n}\n\n"],"names":["Adduser","baseUrl","history","useHistory","useState","Name","setName","Phone","setPhone","Email","setEmail","Password","setPassword","cPassword","setCPassword","process","addUser1","e","preventDefault","axios","then","res","push","alert","path","useLocation","pathname","split","getPost","access_token","localStorage","getItem","headers","Authorization","data","useEffect","undefined","className","id","action","style","backgroundColor","htmlFor","type","name","placeholder","onChange","target","value","maxLength","defaultChecked","onClick"],"sourceRoot":""}