{"version":3,"file":"static/js/50.d30f07dc.chunk.js","mappings":"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","sources":["app/components/transaction/Penalty&bonus.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport ReactPaginate from \"react-paginate\";\nconst $ = require(\"jquery\")\n$.Datatable = require(\"datatables.net\");\nexport default function Penaltybonus() {\n\n    const [data, setUser] = useState()\n    const beckendLocalApiUrl = process.env.REACT_APP_BACKEND_LOCAL_API;\n    const beckendLiveApiUrl = process.env.REACT_APP_BACKEND_LIVE_API;\n    const nodeMode = process.env.NODE_ENV;\n    if (nodeMode === \"development\") {\n        var baseUrl = beckendLocalApiUrl;\n    } else {\n        baseUrl = beckendLiveApiUrl;\n    }\n\n\n\n    //use for pagination..\n    let [limit, setLimit] = useState(10);\n\n    const setpageLimit = (event) => {\n        let key = event.target.value\n        setLimit(key);\n    }\n    const [pageNumber, setPageNumber] = useState(0);\n    const [numberOfPages, setNumberOfPages] = useState(0);\n    //user for searching..\n    const [searchList, setSearchList] = useState(0);\n    const [searchType, setSearchType] = useState(0);\n\n    //react paginate..\n    const handlePageClick = async (data) => {\n        let currentPage = data.selected + 1;\n        setPageNumber(currentPage);\n        // scroll to the top\n        //window.scrollTo(0, 0)\n    };\n\n    //   searching handler\n    const searchHandler = (event) => {\n        let key = event.target.value\n        setSearchList(key);\n    }\n\n    const Alluser = () => {\n        const access_token = localStorage.getItem(\"token\")\n        const headers = {\n            Authorization: `Bearer ${access_token}`\n        }\n        axios.get(baseUrl + `User/all/panelty?page=${pageNumber}&_limit=${limit}&_q=${searchList}&_stype=${searchType}`, { headers })\n            .then((res) => {\n                //setUser(res.data)\n                setUser(res.data.admin)\n                setNumberOfPages(res.data.totalPages)\n                //$('table').dataTable();\n            })\n    }\n\n\n    const [type, setType] = useState()\n    const [bonus, setBonus] = useState()\n    const update = (id) => {\n        \n        const access_token = localStorage.getItem(\"token\")\n        const headers = {\n            Authorization: `Bearer ${access_token}`\n        }\n        if (type === \"bonus\") {\n            const confirm = window.confirm(\"Are you sure, you want to add bonus to this user?\")\n            if (confirm) {\n            axios.post(baseUrl + `user/bonus/${id}`,\n                {\n                    bonus: JSON.parse(bonus)\n                },\n                { headers })\n                .then((res) => {\n                    Alluser()\n                })\n            }\n        } else {\n            const confirm2 = window.confirm(\"Are you sure, you want to add penalty to this user?\")\n            if (confirm2) {\n            axios.post(baseUrl + `user/penlaty/${id}`,\n                {\n                    bonus: JSON.parse(bonus)\n                },\n                { headers })\n                .then((res) => {\n                    Alluser()\n                })\n            }\n        }\n    }\n\n    useEffect(() => {\n        Alluser()\n    }, [pageNumber, limit, searchList, searchType])\n\n\n    return (\n        <>\n            {/* <h4 className='font-weight-bold my-3'>ALL CHALLANGES</h4> */}\n            <div className=\"row \">\n                <div className=\"col-12 grid-margin\">\n                    <div className=\"card\">\n                        <div className=\"card-body text-light\" style={{ backgroundColor: \"rgba(0, 27, 11, 0.734)\" }}>\n                            <h4 className=\"card-title \">penalty and Bonus</h4>\n                            {/* searching */}\n                            <div className='row'>\n                                <select className='form-control col-sm-3 m-2' id='searchType' name='searchtype' onChange={(e) => setSearchType(e.target.value)}>\n                                    <option value=\"0\">Select Search by</option>\n                                    <option value=\"Name\">Name</option>\n                                    <option value=\"Phone\">Phone</option>\n                                    <option value=\"_id\">User Id</option>\n                                </select>\n                                <input type='text' placeholder='Search...' className='form-control col-sm-4 m-2' onChange={searchHandler} />\n                                <select className='form-control col-sm-1 m-1 bg-dark text-light' id='pagelimit' name='pagelimit' onChange={setpageLimit}>\n                                    <option value=\"10\">Set limit</option>\n                                    <option value=\"20\">20</option>\n                                    <option value=\"50\">50</option>\n                                    <option value=\"100\">100</option>\n                                    <option value=\"500\">500</option>\n                                </select>\n                            </div>\n                            <div className=\"table-responsive\">\n                                <table className=\"table text-light\">\n                                    <thead>\n                                        <tr>\n                                            <th>#</th>\n                                            <th> ID</th>\n                                            <th> Name</th>\n                                            <th> Mobile </th>\n                                            <th> Balance </th>\n                                            <th> Action </th>\n                                        </tr>\n                                    </thead>\n\n\n\n                                    <tbody>\n                                        {data && data.map((data, key) => (\n\n                                            <tr role=\"row\" className=\"odd\">\n                                                <td className=\"sorting_1\">{key + 1}</td>\n                                                <td>{data._id}</td>\n                                                <td>\n\n\n                                                    {data.Name}\n\n                                                </td>\n                                                <td>{data.Phone}</td>\n                                                <td>{data.Wallet_balance}</td>\n                                                <td>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-12 col-lg-5\">\n                                                            <input id=\"number\" type=\"number\" className=\"form-control input-sm\" style={{ minWidth: '100px' }}\n                                                                placeholder=\"Amount\" onChange={(e) => setBonus(e.target.value)} />\n                                                        </div>\n                                                        <div className=\"col-12 col-lg-4\">\n                                                            <div className=\"form-group\">\n                                                                <select className=\"form-control input-sm\" name=\"type\" style={{ minWidth: '100px' }} onChange={(e) => setType(e.target.value)}>\n                                                                    <option value=\"penalty\">Penalty</option>\n                                                                    <option value=\"bonus\">Bonus</option>\n                                                                </select>\n                                                            </div>\n                                                        </div>\n                                                        <div className=\"col-12 col-lg-3\">\n                                                            <button className=\"btn btn-sm btn-primary\" onClick={() => update(data._id)}>UPDATE</button>\n                                                        </div>\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n\n                                </table>\n                            </div>\n\n                            <div className='mt-4'>\n                                <ReactPaginate\n                                    previousLabel={\"Previous\"}\n                                    nextLabel={\"Next\"}\n                                    breakLabel={\"...\"}\n                                    pageCount={numberOfPages}\n                                    marginPagesDisplayed={2}\n                                    pageRangeDisplayed={3}\n                                    onPageChange={handlePageClick}\n                                    containerClassName={\"pagination justify-content-center\"}\n                                    pageClassName={\"page-item\"}\n                                    pageLinkClassName={\"page-link\"}\n                                    previousClassName={\"page-item\"}\n                                    previousLinkClassName={\"page-link\"}\n                                    nextClassName={\"page-item\"}\n                                    nextLinkClassName={\"page-link\"}\n                                    breakClassName={\"page-item\"}\n                                    breakLinkClassName={\"page-link\"}\n                                    activeClassName={\"active\"}\n                                />\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n"],"names":["Penaltybonus","baseUrl","useState","data","setUser","process","limit","setLimit","pageNumber","setPageNumber","numberOfPages","setNumberOfPages","searchList","setSearchList","searchType","setSearchType","handlePageClick","currentPage","selected","Alluser","access_token","localStorage","getItem","headers","Authorization","axios","then","res","admin","totalPages","type","setType","bonus","setBonus","useEffect","className","style","backgroundColor","id","name","onChange","e","target","value","placeholder","event","key","map","role","_id","Name","Phone","Wallet_balance","minWidth","onClick","window","confirm","JSON","parse","update","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","require","Datatable"],"sourceRoot":""}