{"version":3,"file":"static/js/485.32f1149d.chunk.js","mappings":"+PAMe,SAASA,IACpB,IAIMC,EAEJA,EALwBC,8BAS1B,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAKC,EAAL,KAAYC,EAAZ,KAKA,GAAoCF,EAAAA,EAAAA,UAAS,GAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACA,GAA0CJ,EAAAA,EAAAA,UAAS,GAAnD,eAAOK,EAAP,KAAsBC,EAAtB,KAEA,GAAoCN,EAAAA,EAAAA,UAAS,GAA7C,eAAOO,EAAP,KAAmBC,EAAnB,KACA,GAAoCR,EAAAA,EAAAA,UAAS,GAA7C,eAAOS,EAAP,KAAmBC,EAAnB,KACA,GAAwCV,EAAAA,EAAAA,UAAS,GAAjD,eAAOW,EAAP,KAAqBC,EAArB,KACA,GAAgDZ,EAAAA,EAAAA,UAAS,IAAzD,eAAOa,EAAP,KAAyBC,EAAzB,KAGMC,EAAe,yCAAG,WAAOC,GAAP,4EAChBC,EAAcD,EAAKE,SAAW,EAClCd,EAAca,GAFM,2CAAH,sDAoBrB,GAAwBjB,EAAAA,EAAAA,WAAS,GAAjC,eAAOmB,EAAP,KAAaC,EAAb,KACMC,EAAO,yCAAG,kGACNC,EAAeC,aAAaC,QAAQ,SACpCC,EAAU,CACZC,cAAc,UAAD,OAAYJ,IAHjB,SAKOK,IAAAA,IAAU7B,EAAQ,iBAAD,OAAkBK,EAAlB,mBAAuCF,EAAvC,eAAmDM,EAAnD,mBAAwEE,EAAxE,oBAA8FE,EAA9F,wBAA0HE,GAAoB,CAAEY,QAAAA,IAC/KG,MAAK,SAACC,GACHT,EAAQS,EAAIb,KAAKc,OACjBxB,EAAiBuB,EAAIb,KAAKe,WAE7B,IAAEC,OAAM,SAACC,GAAD,OAAOC,MAAMD,EAAb,IAVD,yDAAH,qDAmCb,OALAE,EAAAA,EAAAA,YAAU,WACNd,GACH,GAAE,CAAClB,EAAYF,EAAOM,EAAYE,EAAWE,EAAaE,IAIvDM,IAAQ,4BACJ,eAAIiB,UAAU,wBAAd,4BACA,gBAAKA,UAAU,MAAf,UACI,gBAAKA,UAAU,qBAAf,UACI,gBAAKA,UAAU,kBAAf,UACI,iBAAKA,UAAU,uBAAuBC,MAAO,CAACC,gBAAgB,0BAA9D,WACI,eAAIF,UAAU,aAAd,yBAGA,iBAAKA,UAAU,MAAf,WACI,oBAAQA,UAAU,4BAA4BG,GAAG,aAAaC,KAAK,aAAaC,SAAU,SAACR,GAAD,OAAOvB,EAAcuB,EAAES,OAAOC,MAA9B,EAA1F,WACI,mBAAQA,MAAM,IAAd,+BACA,mBAAQA,MAAM,OAAd,mBACA,mBAAQA,MAAM,QAAd,oBACA,mBAAQA,MAAM,MAAd,yBAEJ,kBAAOC,KAAK,OAAOC,YAAY,YAAYT,UAAU,4BAA4BK,SAjEvF,SAACK,GACnB,IAAIC,EAAMD,EAAMJ,OAAOC,MACvBnC,EAAcuC,EACjB,KAgE2B,gCACJ,oBAASX,UAAU,4BAA4BG,GAAG,eAAeC,KAAK,eAAeC,SA9DvF,SAACK,GACvB,IAAIC,EAAMD,EAAMJ,OAAOC,MACvB/B,EAAgBmC,GAChBjC,EAAoBiC,EACnB,EA0DuB,WACI,mBAAQJ,MAAM,IAAd,4BACA,mBAAQA,MAAM,WAAd,uBACA,mBAAQA,MAAM,aAAd,yBACA,mBAAQA,MAAM,QAAd,sBACA,mBAAQA,MAAM,eAAd,sBAGJ,oBAASP,UAAU,+CAA+CG,GAAG,YAAYC,KAAK,YAAYC,SAjGrG,SAACK,GAClB,IAAIC,EAAMD,EAAMJ,OAAOC,MACvBzC,EAAS6C,EACZ,EA8FuB,WACI,mBAAQJ,MAAM,KAAd,wBACA,mBAAQA,MAAM,KAAd,iBACA,mBAAQA,MAAM,KAAd,iBACA,mBAAQA,MAAM,MAAd,kBACA,mBAAQA,MAAM,MAAd,wBAMJ,gBAAKP,UAAU,mBAAf,UACI,mBAAOA,UAAU,mBAAjB,WACI,4BACI,2BACI,+BACA,iCACA,mCACA,sCACA,uCACA,wCACA,uCACA,2CACA,wCACA,2CAGR,2BACKjB,EAAK6B,KAAI,SAAC7B,EAAM4B,GAAP,OACN,2BACI,wBAAKA,EAAM,KACX,wBAAK5B,EAAK8B,OACV,yBACI,iBAAMb,UAAU,oBAAhB,SAAqCjB,EAAK+B,UAE9C,eAAId,UAAU,eAAd,SAA8BjB,EAAKgC,SACnC,mCAAMhC,EAAKiC,mBAIX,gBAAIhB,UAAS,UAAOjB,EAAKiC,gBAAmBjC,EAAKkC,UAAYlC,EAAKmC,aAAenC,EAAKoC,iBAAmBpC,EAAKqC,YAAerC,EAAKsC,WAAatC,EAAKuC,eAAiBvC,EAAKwC,gBAAkBxC,EAAKyC,qBAAuBzC,EAAK0C,aAAe1C,EAAK2C,gBAAmB,EAAK,cAAgB,gBAAzR,oBAA+S3C,EAAKiC,gBAAmBjC,EAAKkC,UAAYlC,EAAKmC,aAAenC,EAAKoC,iBAAmBpC,EAAKqC,YAAerC,EAAKsC,WAAatC,EAAKuC,eAAiBvC,EAAKwC,gBAAkBxC,EAAKyC,qBAAuBzC,EAAK0C,aAAe1C,EAAK2C,mBAC5gB,wBAAK3C,EAAK0C,gBACV,eAAIzB,UAAU,eAAd,SAA8BjB,EAAK4C,YACnC,yBACI,gBAAK3B,UAAU,8BAAf,SAA8CjB,EAAK6C,cAEvD,2BACI,mBAAQpB,KAAK,SAASR,UAAS,oBAAiC,SAAlBjB,EAAK8C,UAAuB,cAAgB,cAAgBC,QAAS,YAjG/I,SAACC,GAEjB,IAAmB,IADAC,OAAOC,QAAP,6BAAqCF,EAAOjB,OACtC,CACrB,IAAM5B,EAAeC,aAAaC,QAAQ,SACpCC,EAAU,CACZC,cAAc,UAAD,OAAYJ,IAEvBgD,EAA+B,SAApBH,EAAOF,UAAuB,OAAS,QACxDtC,IAAAA,KAAW7B,EAAQ,cAAD,OAAeqE,EAAOlB,KAAO,CAAEgB,UAAWK,GAAY,CAAE7C,QAAAA,IACrEG,MAAK,SAACC,GACHR,EAAQQ,EAAIb,MACZuD,QAAQC,IAAI3C,EAAIb,KACnB,GACR,CAEJ,CAkF0KyD,CAAYtD,EAAO,EAA9I,SACsB,SAAlBA,EAAK8C,UAAuB,UAAY,WAE5C,SAAC,KAAD,CAAMrB,KAAK,SAASR,UAAU,oBAAoBsC,GAAE,wBAAmBvD,EAAK8B,KAA5E,wBACA,SAAC,KAAD,CAAML,KAAK,SAASR,UAAU,uBAAuBsC,GAAE,0BAAqBvD,EAAK8B,KAAjF,uBAtBC9B,EAAK8B,IADR,YA+BtB,gBAAKb,UAAU,OAAf,UACI,SAAC,IAAD,CACIuC,cAAe,WACfC,UAAW,OACXC,WAAY,MACZC,UAAWzE,EACX0E,qBAAsB,EACtBC,mBAAoB,EACpBC,aAAclE,EACdmE,mBAAoB,oCACpBC,cAAe,YACfC,kBAAmB,YACnBC,kBAAmB,YACnBC,sBAAuB,YACvBC,cAAe,YACfC,kBAAmB,YACnBC,eAAgB,YAChBC,mBAAoB,YACpBC,gBAAiB,wBAUpD,CAtMSC,EAAQ,MAChBC,UAAYD,EAAQ,K","sources":["app/components/userManagement/Allusers.js"],"sourcesContent":["import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport ReactPaginate from 'react-paginate'\nconst $ = require(\"jquery\")\n$.Datatable = require(\"datatables.net\");\nexport default function Allusers() {\n    const beckendLocalApiUrl = process.env.REACT_APP_BACKEND_LOCAL_API;\n    const beckendLiveApiUrl = process.env.REACT_APP_BACKEND_LIVE_API;\n    const nodeMode = process.env.NODE_ENV;\n    if (nodeMode === \"development\") {\n      var baseUrl = beckendLocalApiUrl;\n    } else {\n      baseUrl = beckendLiveApiUrl;\n    }\n  \n    //use for pagination..\n    let [limit, setLimit] = useState(10);\n    const setpageLimit = (event) => {\n        let key = event.target.value\n        setLimit(key);\n    }\n    const [pageNumber, setPageNumber] = useState(0);\n    const [numberOfPages, setNumberOfPages] = useState(0);\n    //user for searching..\n    const [searchList, setSearchList] = useState(0);\n    const [searchType, setSearchType] = useState(0);\n    const [findByStatus, setFindByStatus] = useState(0);\n    const [findByuserStatus, setFindByuserStatus] = useState(\"\");\n\n    //react paginate..\n    const handlePageClick = async (data) => {\n        let currentPage = data.selected + 1;\n        setPageNumber(currentPage);\n        // scroll to the top\n        //window.scrollTo(0, 0)\n    };\n\n    //   searching handler\n    const searchHandler = (event) => {\n        let key = event.target.value\n        setSearchList(key);\n    }\n\n    //   search by status handler\n   const searchByStatus = (event)=>{\n    let key = event.target.value\n    setFindByStatus(key);\n    setFindByuserStatus(key);\n    }\n\n    const [user, setUser] = useState(false)\n    const getUser = async () => {\n        const access_token = localStorage.getItem(\"token\")\n        const headers = {\n            Authorization: `Bearer ${access_token}`\n        }\n        const data = await axios.get(baseUrl+`User/all?page=${pageNumber}&_limit=${limit}&_q=${searchList}&_stype=${searchType}&_status=${findByStatus}&_Userstatus=${findByuserStatus}`, { headers })\n            .then((res) => {\n                setUser(res.data.admin)\n                setNumberOfPages(res.data.totalPages)\n                // $('table').dataTable();\n            }).catch((e) => alert(e))\n    }\n\n    const blockPlayer = (player) => {\n        const confirmBox = window.confirm(`are you sure block ${player.Name}`);\n        if (confirmBox === true) {\n            const access_token = localStorage.getItem(\"token\")\n            const headers = {\n                Authorization: `Bearer ${access_token}`\n            }\n            const userType = player.user_type == 'Block' ? 'User' : 'Block';\n            axios.post(baseUrl+`block/user/${player._id}`, { user_type: userType }, { headers })\n                .then((res) => {\n                    getUser(res.data)\n                    console.log(res.data);\n                })\n        }\n\n    }\n\n    useEffect(() => {\n        getUser()\n    }, [pageNumber, limit, searchList, searchType,findByStatus,findByuserStatus])\n\n\n    return (\n        user && <div>\n            <h4 className='font-weight-bold my-3'>All USER LIST</h4>\n            <div className=\"row\">\n                <div className=\"col-12 grid-margin\">\n                    <div className=\"card text-white\">\n                        <div className=\"card-body text-light\" style={{backgroundColor:\"rgba(0, 27, 11, 0.734)\"}}>\n                            <h4 className=\"card-title\">Users List</h4>\n\n                            {/* searching */}\n                            <div className='row'>\n                                <select className='form-control col-sm-3 m-2' id='searchType' name='searchtype' onChange={(e) => setSearchType(e.target.value)}>\n                                    <option value=\"0\">Select Search by</option>\n                                    <option value=\"Name\">Name</option>\n                                    <option value=\"Phone\">Phone</option>\n                                    <option value=\"_id\">User Id</option>\n                                </select>\n                                <input type='text' placeholder='Search...' className='form-control col-sm-4 m-2' onChange={searchHandler} />\n                            \n                                <h5>Or</h5>\n                            <select  className='form-control col-sm-3 m-2' id='findByStatus' name='findByStatus' onChange={searchByStatus}>\n                                <option value=\"0\">Search Status</option>\n                                <option value=\"verified\">verified</option>\n                                <option value=\"unverified\">unverified</option>\n                                <option value=\"Block\">Blocked</option>\n                                <option value=\"hold_balance\">Hold</option>\n                            </select>\n\n                            <select  className='form-control col-sm-1 m-1 bg-dark text-light' id='pagelimit' name='pagelimit' onChange={setpageLimit}>\n                                <option value=\"10\">Set limit</option>\n                                <option value=\"20\">20</option>\n                                <option value=\"50\">50</option>\n                                <option value=\"100\">100</option>\n                                <option value=\"500\">500</option>\n                            </select>\n                            </div>\n\n\n\n                            <div className=\"table-responsive\">\n                                <table className=\"table text-light\">\n                                    <thead>\n                                        <tr>\n                                            <th>#</th>\n                                            <th> ID</th>\n                                            <th> Name</th>\n                                            <th> Mobile </th>\n                                            <th> Balance </th>\n                                            <th> MissMatch</th>\n                                            <th>Game hold</th>\n                                            <th> Reffered By </th>\n                                            <th> Verified </th>\n                                            <th> Action </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {user.map((user, key) => (\n                                            <tr key={user._id}>\n                                                <td>{key + 1}</td>\n                                                <td>{user._id}</td>\n                                                <td>\n                                                    <span className=\"pl-2 text-primary\">{user.Name}</span>\n                                                </td>\n                                                <td className='text-success'>{user.Phone}</td>\n                                                <td>₹{user.Wallet_balance}</td>\n\n\n\n                                                <td className={`${((user.Wallet_balance - ((user.wonAmount + user.totalDeposit + user.referral_earning + user.totalBonus) - (user.loseAmount + user.totalWithdrawl + user.referral_wallet + user.withdraw_holdbalance + user.hold_balance + user.totalPenalty))) != 0) ? 'text-danger' : 'text-success'}`}>₹ {(user.Wallet_balance - ((user.wonAmount + user.totalDeposit + user.referral_earning + user.totalBonus) - (user.loseAmount + user.totalWithdrawl + user.referral_wallet + user.withdraw_holdbalance + user.hold_balance + user.totalPenalty)))}</td>\n                                                <td>{user.hold_balance}</td>\n                                                <td className='text-success'>{user.referral}</td>\n                                                <td>\n                                                    <div className=\"badge badge-outline-success\">{user.verified}</div>\n                                                </td>\n                                                <td>\n                                                    <button type='button' className={`btn  mx-1 ${user.user_type == 'Block' ? 'btn-success' : 'btn-danger'}`} onClick={() => { blockPlayer(user) }}>{\n                                                        user.user_type == \"Block\" ? \"Unblock\" : \"Block\"\n                                                    }</button>\n                                                    <Link type='button' className=\"btn btn-info mx-1\" to={`/user/adduser/${user._id}`}>Edit User</Link>\n                                                    <Link type='button' className=\"btn btn-primary mx-1\" to={`/user/view_user/${user._id}`}>View</Link>\n                                                </td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            </div>\n\n                            <div className='mt-4'>\n                                <ReactPaginate\n                                    previousLabel={\"Previous\"}\n                                    nextLabel={\"Next\"}\n                                    breakLabel={\"...\"}\n                                    pageCount={numberOfPages}\n                                    marginPagesDisplayed={2}\n                                    pageRangeDisplayed={3}\n                                    onPageChange={handlePageClick}\n                                    containerClassName={\"pagination justify-content-center\"}\n                                    pageClassName={\"page-item\"}\n                                    pageLinkClassName={\"page-link\"}\n                                    previousClassName={\"page-item\"}\n                                    previousLinkClassName={\"page-link\"}\n                                    nextClassName={\"page-item\"}\n                                    nextLinkClassName={\"page-link\"}\n                                    breakClassName={\"page-item\"}\n                                    breakLinkClassName={\"page-link\"}\n                                    activeClassName={\"active\"}\n                                />\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n"],"names":["Allusers","baseUrl","process","useState","limit","setLimit","pageNumber","setPageNumber","numberOfPages","setNumberOfPages","searchList","setSearchList","searchType","setSearchType","findByStatus","setFindByStatus","findByuserStatus","setFindByuserStatus","handlePageClick","data","currentPage","selected","user","setUser","getUser","access_token","localStorage","getItem","headers","Authorization","axios","then","res","admin","totalPages","catch","e","alert","useEffect","className","style","backgroundColor","id","name","onChange","target","value","type","placeholder","event","key","map","_id","Name","Phone","Wallet_balance","wonAmount","totalDeposit","referral_earning","totalBonus","loseAmount","totalWithdrawl","referral_wallet","withdraw_holdbalance","hold_balance","totalPenalty","referral","verified","user_type","onClick","player","window","confirm","userType","console","log","blockPlayer","to","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","require","Datatable"],"sourceRoot":""}