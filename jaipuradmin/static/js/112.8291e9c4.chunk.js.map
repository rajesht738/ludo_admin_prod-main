{"version":3,"file":"static/js/112.8291e9c4.chunk.js","mappings":"wNAIe,SAASA,IAEpB,IAMMC,EANN,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KAiCA,OA1BEL,EALwBM,+BAQ1BC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAeC,aAAaC,QAAQ,SACpCC,EAAU,CACZC,cAAc,UAAD,OAAYJ,IAE7BK,IAAAA,IAAUb,EAAQ,YAAa,CAAEW,QAAAA,IAC5BG,MAAK,SAACC,GACHZ,EAASY,EAAIC,MACbC,QAAQC,IAAIH,EAAIC,KACnB,IACAG,OAAM,SAACC,GACJH,QAAQC,IAAIE,EACf,IACLP,IAAAA,IAAUb,EAAQ,YAAa,CAAEW,QAAAA,IAC5BG,MAAK,SAACC,GACHV,EAASU,EAAIC,MACbC,QAAQC,IAAIH,EAAIC,KACnB,IACAG,OAAM,SAACC,GACJH,QAAQC,IAAIE,EACf,GACR,GAAE,SAEWC,IAAVnB,EACO,MAIP,+BAGI,iBAAKoB,UAAU,eAAf,WACI,gBAAKA,UAAU,qBAAf,UACI,gBAAKA,UAAU,eAAf,UACI,iBAAKA,UAAU,uBAAuBC,MAAO,CAACC,gBAAgB,0BAA9D,WACI,eAAIF,UAAU,wBAAd,6BACA,gBAAKA,UAAU,mBAAf,UACI,mBAAOA,UAAU,QAAjB,WACI,4BACI,2BACI,+BACA,iCACA,mCACA,sCACA,4CAGPpB,EAAMuB,KAAI,SAACC,EAAOC,GAAR,OAEP,4BACI,2BACI,wBAAKA,EAAM,KACX,wBAAKD,EAAME,OACX,yBACI,iBAAMN,UAAU,OAAhB,SAAwBI,EAAMG,UAElC,wBAAKH,EAAMI,SACX,yBACI,gBAAKR,UAAU,8BAAf,4BATAI,EAAME,IAFX,iBAqB/B,gBAAKN,UAAU,qBAAf,UACI,gBAAKA,UAAU,eAAf,UACI,iBAAKA,UAAU,uBAAuBC,MAAO,CAACC,gBAAgB,0BAA9D,WACI,eAAIF,UAAU,wBAAd,6BACA,gBAAKA,UAAU,mBAAf,UACI,mBAAOA,UAAU,QAAjB,WACI,4BACI,2BACI,+BACA,iCACA,mCACA,sCACA,wCACA,+CAGPlB,EAAMqB,KAAI,SAACC,EAAOC,GAAR,OAEP,4BACI,2BACI,wBAAKA,EAAM,KACX,wBAAKD,EAAME,OACX,yBACI,iBAAMN,UAAU,OAAhB,SAAwBI,EAAMG,UAElC,wBAAKH,EAAMI,SACX,yBACI,gBAAKR,UAAU,8BAAf,yBAGJ,yBACI,SAAC,KAAD,CAAMS,GAAE,6BAAwBL,EAAME,KAAOI,KAAK,SAASV,UAAU,wBAArE,oCAbAK,EAFL,oBA6B9C,C","sources":["app/components/adminManagement/Alladmin.js"],"sourcesContent":["import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function Alladmin() {\n\n    const [Admin, setAdmin] = useState([])\n    const [agent, setAgent] = useState([])\n    const beckendLocalApiUrl = process.env.REACT_APP_BACKEND_LOCAL_API;\n    const beckendLiveApiUrl = process.env.REACT_APP_BACKEND_LIVE_API;\n    const nodeMode = process.env.NODE_ENV;\n    if (nodeMode === \"development\") {\n      var baseUrl = beckendLocalApiUrl;\n    } else {\n      baseUrl = beckendLiveApiUrl;\n    }\n\n    useEffect(() => {\n        const access_token = localStorage.getItem('token')\n        const headers = {\n            Authorization: `Bearer ${access_token}`\n        }\n        axios.get(baseUrl+`admin/all`, { headers })\n            .then((res) => {\n                setAdmin(res.data)\n                console.log(res.data);\n            })\n            .catch((e) => {\n                console.log(e);\n            })\n        axios.get(baseUrl+`agent/all`, { headers })\n            .then((res) => {\n                setAgent(res.data)\n                console.log(res.data);\n            })\n            .catch((e) => {\n                console.log(e);\n            })\n    }, [])\n\n    if (Admin === undefined) {\n        return null\n    }\n\n    return (\n        <>\n\n            {/* <h4 className='text-uppercase font-weight-bold my-3'>all Admin list</h4> */}\n            <div className=\"row bg-dark \">\n                <div className=\"col-12 grid-margin\">\n                    <div className=\"card bg-dark\">\n                        <div className=\"card-body text-light\" style={{backgroundColor:\"rgba(0, 27, 11, 0.734)\"}}>\n                            <h4 className=\"card-title text-light\">all Admin list</h4>\n                            <div className=\"table-responsive\">\n                                <table className=\"table\">\n                                    <thead>\n                                        <tr>\n                                            <th>#</th>\n                                            <th> ID</th>\n                                            <th> Name</th>\n                                            <th> Mobile </th>\n                                            <th> Verified </th>\n                                        </tr>\n                                    </thead>\n                                    {Admin.map((admin, key) => (\n\n                                        <tbody key={admin._id} >\n                                            <tr>\n                                                <td>{key + 1}</td>\n                                                <td>{admin._id}</td>\n                                                <td>\n                                                    <span className=\"pl-2\">{admin.Name}</span>\n                                                </td>\n                                                <td>{admin.Phone}</td>\n                                                <td>\n                                                    <div className=\"badge badge-outline-success\">Verified</div>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    ))}\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-12 grid-margin\">\n                    <div className=\"card bg-dark\">\n                        <div className=\"card-body text-light\" style={{backgroundColor:\"rgba(0, 27, 11, 0.734)\"}}>\n                            <h4 className=\"card-title text-light\">All Agent List</h4>\n                            <div className=\"table-responsive\">\n                                <table className=\"table\">\n                                    <thead>\n                                        <tr>\n                                            <th>#</th>\n                                            <th> ID</th>\n                                            <th> Name</th>\n                                            <th> Mobile </th>\n                                            <th> Verified </th>\n                                            <th> Permissions </th>\n                                        </tr>\n                                    </thead>\n                                    {agent.map((admin, key) => (\n\n                                        <tbody key={key} >\n                                            <tr>\n                                                <td>{key + 1}</td>\n                                                <td>{admin._id}</td>\n                                                <td>\n                                                    <span className=\"pl-2\">{admin.Name}</span>\n                                                </td>\n                                                <td>{admin.Phone}</td>\n                                                <td>\n                                                    <div className=\"badge badge-outline-success\">Verified</div>\n                                                </td>\n                                                \n                                                <td>\n                                                    <Link to={`/agent/permissions/${admin._id}`} type=\"button\" className=\"btn btn-outline-info \">Grant Permission</Link>\n                                                </td>\n                                                \n                                            </tr>\n                                        </tbody>\n                                    ))}\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n"],"names":["Alladmin","baseUrl","useState","Admin","setAdmin","agent","setAgent","process","useEffect","access_token","localStorage","getItem","headers","Authorization","axios","then","res","data","console","log","catch","e","undefined","className","style","backgroundColor","map","admin","key","_id","Name","Phone","to","type"],"sourceRoot":""}